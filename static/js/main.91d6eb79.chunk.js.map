{"version":3,"sources":["components/HomePage.tsx","components/Navbar.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navbar","role","to","isActive","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","setSelectedPersonSlug","name","slug","sex","onClick","PeopleTable","props","people","useState","selectedPersonSlug","peopleWithParents","map","mother","find","parent","motherName","father","fatherName","born","died","Loader","PeoplePage","setPeople","isLoading","setIsLoading","isError","setIsError","isEmptyError","setIsEmptyError","useParams","personSlug","useEffect","peopleFromServer","length","catch","finally","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.91d6eb79.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => `navbar-item ${isActive ? 'has-background-grey-lighter' : ''}`}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => `navbar-item ${isActive ? 'has-background-grey-lighter' : ''}`}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  setSelectedPersonSlug: (slug: string) => void;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person, setSelectedPersonSlug,\n}) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={`${sex === 'f' ? 'has-text-danger' : ''}`}\n      onClick={() => setSelectedPersonSlug(slug)}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useState } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[]\n  selectedPersonSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = (props) => {\n  const { people } = props;\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState('');\n\n  const peopleWithParents = people?.map(person => {\n    return {\n      ...person,\n      mother: people.find(parent => parent.name === person.motherName),\n      father: people.find(parent => parent.name === person.fatherName),\n    };\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map(person => {\n          const {\n            slug,\n            sex,\n            born,\n            died,\n            mother,\n            father,\n            motherName,\n            fatherName,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={`${selectedPersonSlug === person.slug ? 'has-background-warning' : ''}`}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                  setSelectedPersonSlug={setSelectedPersonSlug}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <PersonLink\n                      person={mother}\n                      setSelectedPersonSlug={setSelectedPersonSlug}\n                    />\n                  )\n                  : (motherName || '-')}\n              </td>\n              <td>\n                {father\n                  ? (\n                    <PersonLink\n                      person={father}\n                      setSelectedPersonSlug={setSelectedPersonSlug}\n                    />\n                  )\n                  : (fatherName || '-')}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\nimport { Loader } from './Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isEmptyError, setIsEmptyError] = useState(false);\n  const { personSlug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(peopleFromServer => {\n        if (peopleFromServer.length === 0) {\n          setIsEmptyError(true);\n        }\n\n        setIsError(false);\n        setPeople(peopleFromServer);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isEmptyError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <PeopleTable people={people} selectedPersonSlug={personSlug} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}